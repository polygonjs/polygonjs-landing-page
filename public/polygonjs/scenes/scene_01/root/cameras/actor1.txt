// insert defines
class CustomActorEvaluator extends ActorEvaluator {
	// insert members

	// /cameras/actor1/cursor1
	v_POLY_cursor1_cursor = computed(() => globalsCursor());

	// /cameras/actor1/vec2ToFloat1
	v_POLY_vec2ToFloat1_x = computed(() => VAR__vec2ToFloat1_vec2.copy(this.v_POLY_cursor1_cursor.value).x);
	v_POLY_vec2ToFloat1_y = computed(() => VAR__vec2ToFloat1_vec2.copy(this.v_POLY_cursor1_cursor.value).y);

	// /cameras/actor1/multAdd2
	v_POLY_multAdd2_val = computed(() => mathFloat_4(multAdd, this.v_POLY_vec2ToFloat1_y.value, 0.0, -0.19, 0.0));

	// /cameras/actor1/multAdd1
	v_POLY_multAdd1_val = computed(() => mathFloat_4(multAdd, this.v_POLY_vec2ToFloat1_x.value, 0.0, 0.19, 0.0));

	// /cameras/actor1/floatToVec3_1
	v_POLY_floatToVec3_1_vec3 = computed(() =>
		floatToVec3(this.v_POLY_multAdd2_val.value, this.v_POLY_multAdd1_val.value, 0.0, VAR__floatToVec3_1_)
	);

	// /cameras/actor1/euler1
	v_POLY_euler1_Euler = computed(() =>
		eulerSetFromVector3(VAR__euler1_Euler.copy(this.v_POLY_floatToVec3_1_vec3.value), 0.0, VAR__euler1__1)
	);

	constructor(scene, object3D) {
		super(scene, object3D);
		// insert after constructor
	}
	// insert body

	onTick() {
		this.onTick1();
	}
	// /cameras/actor1/onTick1
	onTick1() {
		this.setObjectRotation1(0);
	}

	// /cameras/actor1/setObjectRotation1
	setObjectRotation1() {
		setObjectRotation(this.object3D, this.v_POLY_euler1_Euler.value, 0.1, true);
	}
}
return CustomActorEvaluator;
