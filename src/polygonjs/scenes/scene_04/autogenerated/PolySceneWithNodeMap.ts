import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
// sop
import { AreaLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AreaLight";
import { AttribIdSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribId";
import { BoxSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Box";
import { CameraControlsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraControls";
import { CameraFrameModeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraFrameMode";
import { CapsuleSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Capsule";
import { CircleSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Circle";
import { CopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy";
import { DeleteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Delete";
import { HemisphereLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/HemisphereLight";
import { HexagonsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Hexagons";
import { InstanceSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Instance";
import { JitterSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Jitter";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { PerspectiveCameraSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PerspectiveCamera";
import { PhysicsPlayerSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PhysicsPlayer";
import { PhysicsRBDAttributesSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PhysicsRBDAttributes";
import { PhysicsWorldSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PhysicsWorld";
import { PolarTransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PolarTransform";
import { SphereSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Sphere";
import { SpotLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/SpotLight";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
import { TubeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Tube";
// mat
import { MeshLambertBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshLambertBuilder";
import { MeshStandardBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandardBuilder";
import { MeshStandardMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandard";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";

export class PolySceneWithNodeMap_scene_04 extends PolyScene {
  node(path: "/geo1"): GeoObjNode;
  node(path: "/geo1/tube1"): TubeSopNode;
  node(path: "/geo1/sphere_PLAYER1"): SphereSopNode;
  node(path: "/geo1/material3"): MaterialSopNode;
  node(path: "/geo1/transform_PLAYER1"): TransformSopNode;
  node(path: "/geo1/perspectiveCamera_PLAYER1"): PerspectiveCameraSopNode;
  node(path: "/geo1/merge1"): MergeSopNode;
  node(path: "/geo1/physicsRBDAttributes1"): PhysicsRBDAttributesSopNode;
  node(path: "/geo1/box1"): BoxSopNode;
  node(path: "/geo1/transform1"): TransformSopNode;
  node(path: "/geo1/merge2"): MergeSopNode;
  node(path: "/geo1/material2"): MaterialSopNode;
  node(path: "/geo1/transform2"): TransformSopNode;
  node(path: "/geo1/merge3"): MergeSopNode;
  node(path: "/geo1/physicsRBDAttributes2"): PhysicsRBDAttributesSopNode;
  node(path: "/geo1/physicsRBDAttributes3"): PhysicsRBDAttributesSopNode;
  node(path: "/geo1/capsule1"): CapsuleSopNode;
  node(path: "/geo1/copy1"): CopySopNode;
  node(path: "/geo1/transform3"): TransformSopNode;
  node(path: "/geo1/physicsRBDAttributes4"): PhysicsRBDAttributesSopNode;
  node(path: "/geo1/transform4"): TransformSopNode;
  node(path: "/geo1/tube2"): TubeSopNode;
  node(path: "/geo1/hexagons1"): HexagonsSopNode;
  node(path: "/geo1/tube3"): TubeSopNode;
  node(path: "/geo1/delete1"): DeleteSopNode;
  node(path: "/geo1/transform5"): TransformSopNode;
  node(path: "/geo1/copy2"): CopySopNode;
  node(path: "/geo1/physicsRBDAttributes5"): PhysicsRBDAttributesSopNode;
  node(path: "/geo1/transform6"): TransformSopNode;
  node(path: "/geo1/transform7"): TransformSopNode;
  node(path: "/geo1/material4"): MaterialSopNode;
  node(path: "/geo1/cameraFrameMode1"): CameraFrameModeSopNode;
  node(path: "/geo1/MAT"): MaterialsNetworkSopNode;
  node(path: "/geo1/MAT/meshStandard1"): MeshStandardMatNode;
  node(
    path: "/geo1/MAT/meshStandardBuilder_GROUND"
  ): MeshStandardBuilderMatNode;
  node(
    path: "/geo1/MAT/meshStandardBuilder_PLAYER"
  ): MeshStandardBuilderMatNode;
  node(
    path: "/geo1/MAT/meshStandardBuilder_BLOCKS"
  ): MeshStandardBuilderMatNode;
  node(path: "/geo1/physicsPlayer1"): PhysicsPlayerSopNode;
  node(path: "/geo1/cameraControls_PLAYER1"): CameraControlsSopNode;
  node(
    path: "/geo1/cameraControls_PLAYER1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/geo1/physicsWorld1"): PhysicsWorldSopNode;
  node(path: "/lights"): GeoObjNode;
  node(path: "/lights/hemisphereLight1"): HemisphereLightSopNode;
  node(path: "/lights/spotLight1"): SpotLightSopNode;
  node(path: "/lights/polarTransform1"): PolarTransformSopNode;
  node(path: "/lights/merge1"): MergeSopNode;
  node(path: "/lights/areaLight1"): AreaLightSopNode;
  node(path: "/lights/merge2"): MergeSopNode;
  node(path: "/cameras"): GeoObjNode;
  node(path: "/cameras/perspectiveCamera1"): PerspectiveCameraSopNode;
  node(path: "/cameras/cameraControls1"): CameraControlsSopNode;
  node(
    path: "/cameras/cameraControls1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/env"): GeoObjNode;
  node(path: "/env/circle1"): CircleSopNode;
  node(path: "/env/jitter1"): JitterSopNode;
  node(path: "/env/copy2"): CopySopNode;
  node(path: "/env/merge1"): MergeSopNode;
  node(path: "/env/sphere1"): SphereSopNode;
  node(path: "/env/instance1"): InstanceSopNode;
  node(path: "/env/attribId1"): AttribIdSopNode;
  node(path: "/env/MAT"): MaterialsNetworkSopNode;
  node(
    path: "/env/MAT/meshLambertBuilder_INSTANCES"
  ): MeshLambertBuilderMatNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_scene_04 {
  "geo1--transform"?: ParamValueSerializedTypeMap["folder"];
  "geo1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "geo1--display"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--CAD"?: ParamValueSerializedTypeMap["folder"];
  "geo1--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CSG"?: ParamValueSerializedTypeMap["folder"];
  "geo1--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "geo1--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TET"?: ParamValueSerializedTypeMap["folder"];
  "geo1--TetScale"?: ParamValueSerializedTypeMap["float"];
  "geo1--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-tube1--radiusTop"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--radiusBottom"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--segmentsRadial"?: ParamValueSerializedTypeMap["integer"];
  "geo1-tube1--segmentsHeight"?: ParamValueSerializedTypeMap["integer"];
  "geo1-tube1--cap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-tube1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-tube1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-tube1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--open"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-tube1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--type"?: ParamValueSerializedTypeMap["integer"];
  "geo1-sphere_PLAYER1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-sphere_PLAYER1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--open"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-sphere_PLAYER1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--detail"?: ParamValueSerializedTypeMap["integer"];
  "geo1-sphere_PLAYER1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-sphere_PLAYER1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-sphere_PLAYER1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material3--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material3--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material3--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material3--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material3--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material3--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material3--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material3--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform_PLAYER1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform_PLAYER1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform_PLAYER1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform_PLAYER1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform_PLAYER1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform_PLAYER1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform_PLAYER1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform_PLAYER1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform_PLAYER1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform_PLAYER1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform_PLAYER1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform_PLAYER1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-perspectiveCamera_PLAYER1--fov"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--near"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--far"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--position"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-perspectiveCamera_PLAYER1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--positionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--positiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--positionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-perspectiveCamera_PLAYER1--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--rotationx"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--rotationy"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--rotationz"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-perspectiveCamera_PLAYER1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-perspectiveCamera_PLAYER1--name"?: ParamValueSerializedTypeMap["string"];
  "geo1-perspectiveCamera_PLAYER1--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "geo1-perspectiveCamera_PLAYER1--PBR"?: ParamValueSerializedTypeMap["folder"];
  "geo1-perspectiveCamera_PLAYER1--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "geo1-perspectiveCamera_PLAYER1--fStop"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "geo1-perspectiveCamera_PLAYER1--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "geo1-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes1--main"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsRBDAttributes1--RBDType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes1--colliderType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes1--sizeMethod"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes1--borderRadius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes1--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--rows"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes1--cols"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes1--density"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--friction"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--restitution"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--linearDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--angularDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--linearVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes1--linearVelocity-linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--linearVelocity-linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--linearVelocity-linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--angularVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes1--angularVelocity-angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--angularVelocity-angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--angularVelocity-angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--gravityScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes1--canSleep"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes1--details"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsRBDAttributes1--addId"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes1--id"?: ParamValueSerializedTypeMap["string"];
  "geo1-box1--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-box1--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--divisions"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-box1--divisions-divisionsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--divisions-divisionsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--divisions-divisionsz"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--divisionsx"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--divisionsy"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--divisionsz"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-box1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-box1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-merge2--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge2--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge2--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-material2--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material2--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material2--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material2--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material2--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform2--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-merge3--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge3--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge3--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes2--main"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsRBDAttributes2--RBDType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes2--colliderType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes2--sizeMethod"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes2--borderRadius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes2--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--rows"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes2--cols"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes2--density"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--friction"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--restitution"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--linearDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--angularDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--linearVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes2--linearVelocity-linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--linearVelocity-linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--linearVelocity-linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--angularVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes2--angularVelocity-angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--angularVelocity-angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--angularVelocity-angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--gravityScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes2--canSleep"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes2--details"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsRBDAttributes2--addId"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes2--id"?: ParamValueSerializedTypeMap["string"];
  "geo1-physicsRBDAttributes3--main"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsRBDAttributes3--RBDType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes3--colliderType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes3--sizeMethod"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes3--borderRadius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes3--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--rows"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes3--cols"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes3--density"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--friction"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--restitution"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--linearDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--angularDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--linearVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes3--linearVelocity-linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--linearVelocity-linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--linearVelocity-linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--angularVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes3--angularVelocity-angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--angularVelocity-angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--angularVelocity-angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--gravityScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes3--canSleep"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes3--details"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsRBDAttributes3--addId"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes3--id"?: ParamValueSerializedTypeMap["string"];
  "geo1-capsule1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--divisions"?: ParamValueSerializedTypeMap["integer"];
  "geo1-capsule1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-capsule1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--srcGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy1--templateGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy1--count"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy1--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy1--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy1--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-transform3--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform3--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform3--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--main"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsRBDAttributes4--RBDType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes4--colliderType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes4--sizeMethod"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes4--borderRadius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes4--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--rows"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes4--cols"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes4--density"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--friction"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--restitution"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--linearDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--angularDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--linearVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes4--linearVelocity-linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--linearVelocity-linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--linearVelocity-linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--angularVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes4--angularVelocity-angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--angularVelocity-angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--angularVelocity-angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--gravityScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes4--canSleep"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes4--details"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsRBDAttributes4--addId"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes4--id"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform4--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform4--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform4--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform4--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform4--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform4--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform4--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform4--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform4--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform4--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform4--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform4--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--radiusTop"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--radiusBottom"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--segmentsRadial"?: ParamValueSerializedTypeMap["integer"];
  "geo1-tube2--segmentsHeight"?: ParamValueSerializedTypeMap["integer"];
  "geo1-tube2--cap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-tube2--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-tube2--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--direction"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-tube2--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--open"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-tube2--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube2--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--size"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-hexagons1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--sizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--sizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--hexagonRadius"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-hexagons1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-hexagons1--pointsOnly"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-tube3--radiusTop"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--radiusBottom"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--segmentsRadial"?: ParamValueSerializedTypeMap["integer"];
  "geo1-tube3--segmentsHeight"?: ParamValueSerializedTypeMap["integer"];
  "geo1-tube3--cap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-tube3--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-tube3--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--direction"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-tube3--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--directionx"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--directiony"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--directionz"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--open"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-tube3--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "geo1-tube3--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--class"?: ParamValueSerializedTypeMap["integer"];
  "geo1-delete1--invert"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-delete1--byObjectType"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-delete1--objectType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-delete1--byExpression"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-delete1--expression"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-delete1--byAttrib"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-delete1--attribType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-delete1--attribName"?: ParamValueSerializedTypeMap["string"];
  "geo1-delete1--attribSize"?: ParamValueSerializedTypeMap["integer"];
  "geo1-delete1--attribComparisonOperator"?: ParamValueSerializedTypeMap["integer"];
  "geo1-delete1--attribValue1"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue2"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-delete1--attribValue2-attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue2-attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue2x"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue2y"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue3"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-delete1--attribValue3-attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue3-attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue3-attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue3x"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue3y"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue3z"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue4"?: ParamValueSerializedTypeMap["vector4"];
  "geo1-delete1--attribValue4-attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue4-attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue4-attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue4-attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue4x"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue4y"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue4z"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribValue4w"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--attribString"?: ParamValueSerializedTypeMap["string"];
  "geo1-delete1--byBbox"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-delete1--bboxSize"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-delete1--bboxSize-bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxSize-bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxSize-bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxSizez"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxCenter"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-delete1--bboxCenter-bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxCenter-bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxCenter-bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxCenterx"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxCentery"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--bboxCenterz"?: ParamValueSerializedTypeMap["float"];
  "geo1-delete1--byBoundingObject"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-delete1--keepPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-transform5--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform5--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform5--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform5--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform5--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform5--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform5--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform5--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform5--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform5--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform5--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform5--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--srcGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy2--templateGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy2--count"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy2--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-copy2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-copy2--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy2--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-copy2--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-copy2--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "geo1-copy2--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes5--main"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsRBDAttributes5--RBDType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes5--colliderType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes5--sizeMethod"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes5--borderRadius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes5--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--sizesx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--sizesy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--sizesz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--rows"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes5--cols"?: ParamValueSerializedTypeMap["integer"];
  "geo1-physicsRBDAttributes5--density"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--friction"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--restitution"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--linearDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--angularDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--linearVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes5--linearVelocity-linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--linearVelocity-linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--linearVelocity-linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--angularVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsRBDAttributes5--angularVelocity-angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--angularVelocity-angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--angularVelocity-angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--gravityScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsRBDAttributes5--canSleep"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes5--details"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsRBDAttributes5--addId"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsRBDAttributes5--id"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform6--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform6--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform6--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform6--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform6--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform6--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform6--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform6--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform6--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform6--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform6--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform6--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform7--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform7--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform7--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform7--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform7--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform7--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform7--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform7--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform7--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform7--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform7--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-material4--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material4--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material4--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material4--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material4--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material4--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material4--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material4--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-cameraFrameMode1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-cameraFrameMode1--frameMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-cameraFrameMode1--expectedAspectRatio"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard1--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandard1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshStandard1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandard1--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandard1--flatShading"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandard1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandard1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandard1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandardBuilder_GROUND--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandardBuilder_GROUND--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandardBuilder_GROUND--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_GROUND--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshStandardBuilder_GROUND--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandardBuilder_GROUND--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_GROUND--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_GROUND--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_GROUND--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_GROUND--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_GROUND--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_GROUND--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandardBuilder_PLAYER--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandardBuilder_PLAYER--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_PLAYER--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshStandardBuilder_PLAYER--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandardBuilder_PLAYER--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_PLAYER--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_PLAYER--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_PLAYER--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_PLAYER--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_PLAYER--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_PLAYER--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshStandardBuilder_BLOCKS--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-physicsPlayer1--main"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsPlayer1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--density"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--friction"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--restitution"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--linearDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--angularDamping"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--linearVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsPlayer1--linearVelocity-linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--linearVelocity-linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--linearVelocity-linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--linearVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--linearVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--linearVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--angularVelocity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsPlayer1--angularVelocity-angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--angularVelocity-angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--angularVelocity-angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--angularVelocityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--angularVelocityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--angularVelocityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--gravityScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsPlayer1--details"?: ParamValueSerializedTypeMap["folder"];
  "geo1-physicsPlayer1--id"?: ParamValueSerializedTypeMap["string"];
  "geo1-cameraControls_PLAYER1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-cameraControls_PLAYER1--node"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--main"?: ParamValueSerializedTypeMap["folder"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--limits"?: ParamValueSerializedTypeMap["folder"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--controls"?: ParamValueSerializedTypeMap["folder"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--leftMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--middleMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--rightMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--oneFingerTouch"?: ParamValueSerializedTypeMap["integer"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--twoFingersTouch"?: ParamValueSerializedTypeMap["integer"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--misc"?: ParamValueSerializedTypeMap["folder"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "geo1-cameraControls_PLAYER1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsWorld1--gravity"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-physicsWorld1--gravity-gravityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsWorld1--gravity-gravityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsWorld1--gravity-gravityz"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsWorld1--gravityx"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsWorld1--gravityy"?: ParamValueSerializedTypeMap["float"];
  "geo1-physicsWorld1--gravityz"?: ParamValueSerializedTypeMap["float"];
  "lights--transform"?: ParamValueSerializedTypeMap["folder"];
  "lights--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "lights--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--t"?: ParamValueSerializedTypeMap["vector3"];
  "lights--t-tx"?: ParamValueSerializedTypeMap["float"];
  "lights--t-ty"?: ParamValueSerializedTypeMap["float"];
  "lights--t-tz"?: ParamValueSerializedTypeMap["float"];
  "lights--tx"?: ParamValueSerializedTypeMap["float"];
  "lights--ty"?: ParamValueSerializedTypeMap["float"];
  "lights--tz"?: ParamValueSerializedTypeMap["float"];
  "lights--r"?: ParamValueSerializedTypeMap["vector3"];
  "lights--r-rx"?: ParamValueSerializedTypeMap["float"];
  "lights--r-ry"?: ParamValueSerializedTypeMap["float"];
  "lights--r-rz"?: ParamValueSerializedTypeMap["float"];
  "lights--rx"?: ParamValueSerializedTypeMap["float"];
  "lights--ry"?: ParamValueSerializedTypeMap["float"];
  "lights--rz"?: ParamValueSerializedTypeMap["float"];
  "lights--s"?: ParamValueSerializedTypeMap["vector3"];
  "lights--s-sx"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sy"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sz"?: ParamValueSerializedTypeMap["float"];
  "lights--sx"?: ParamValueSerializedTypeMap["float"];
  "lights--sy"?: ParamValueSerializedTypeMap["float"];
  "lights--sz"?: ParamValueSerializedTypeMap["float"];
  "lights--scale"?: ParamValueSerializedTypeMap["float"];
  "lights--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "lights--display"?: ParamValueSerializedTypeMap["boolean"];
  "lights--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--CAD"?: ParamValueSerializedTypeMap["folder"];
  "lights--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "lights--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CSG"?: ParamValueSerializedTypeMap["folder"];
  "lights--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "lights--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TET"?: ParamValueSerializedTypeMap["folder"];
  "lights--TetScale"?: ParamValueSerializedTypeMap["float"];
  "lights--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "lights-hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "lights-hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-spotLight1--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--color"?: ParamValueSerializedTypeMap["color"];
  "lights-spotLight1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--angle"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--penumbra"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--decay"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--distance"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--helperSize"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--tmap"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--map"?: ParamValueSerializedTypeMap["node_path"];
  "lights-spotLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-spotLight1--shadow"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowUpdateOnNextRender"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowRes"?: ParamValueSerializedTypeMap["vector2"];
  "lights-spotLight1--shadowRes-shadowResx"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowRes-shadowResy"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowResx"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowResy"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowBias"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowNear"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowFar"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowRadius"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--volumetric"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--tvolumetric"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--volAttenuation"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--volAnglePower"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--raymarching"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--raymarchingPenumbra"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--raymarchingShadowBiasAngle"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--raymarchingShadowBiasDistance"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "lights-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "lights-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "lights-areaLight1--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-areaLight1--color"?: ParamValueSerializedTypeMap["color"];
  "lights-areaLight1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--width"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--height"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-areaLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-merge2--compact"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge2--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge2--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras--transform"?: ParamValueSerializedTypeMap["folder"];
  "cameras--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--t"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--r"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--s"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--scale"?: ParamValueSerializedTypeMap["float"];
  "cameras--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "cameras--display"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--CAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CSG"?: ParamValueSerializedTypeMap["folder"];
  "cameras--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TET"?: ParamValueSerializedTypeMap["folder"];
  "cameras--TetScale"?: ParamValueSerializedTypeMap["float"];
  "cameras--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--default"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera1--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera1--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera1--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera1--PBR"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera1--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera1--fStop"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1--group"?: ParamValueSerializedTypeMap["string"];
  "cameras-cameraControls1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls1-cameraOrbitControls1--main"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limits"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--controls"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--leftMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--middleMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--rightMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--oneFingerTouch"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--twoFingersTouch"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--misc"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "env--transform"?: ParamValueSerializedTypeMap["folder"];
  "env--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "env--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "env--t"?: ParamValueSerializedTypeMap["vector3"];
  "env--t-tx"?: ParamValueSerializedTypeMap["float"];
  "env--t-ty"?: ParamValueSerializedTypeMap["float"];
  "env--t-tz"?: ParamValueSerializedTypeMap["float"];
  "env--tx"?: ParamValueSerializedTypeMap["float"];
  "env--ty"?: ParamValueSerializedTypeMap["float"];
  "env--tz"?: ParamValueSerializedTypeMap["float"];
  "env--r"?: ParamValueSerializedTypeMap["vector3"];
  "env--r-rx"?: ParamValueSerializedTypeMap["float"];
  "env--r-ry"?: ParamValueSerializedTypeMap["float"];
  "env--r-rz"?: ParamValueSerializedTypeMap["float"];
  "env--rx"?: ParamValueSerializedTypeMap["float"];
  "env--ry"?: ParamValueSerializedTypeMap["float"];
  "env--rz"?: ParamValueSerializedTypeMap["float"];
  "env--s"?: ParamValueSerializedTypeMap["vector3"];
  "env--s-sx"?: ParamValueSerializedTypeMap["float"];
  "env--s-sy"?: ParamValueSerializedTypeMap["float"];
  "env--s-sz"?: ParamValueSerializedTypeMap["float"];
  "env--sx"?: ParamValueSerializedTypeMap["float"];
  "env--sy"?: ParamValueSerializedTypeMap["float"];
  "env--sz"?: ParamValueSerializedTypeMap["float"];
  "env--scale"?: ParamValueSerializedTypeMap["float"];
  "env--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "env--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "env--display"?: ParamValueSerializedTypeMap["boolean"];
  "env--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "env--CAD"?: ParamValueSerializedTypeMap["folder"];
  "env--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "env--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "env--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "env--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "env--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "env--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "env--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "env--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "env--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "env--CSG"?: ParamValueSerializedTypeMap["folder"];
  "env--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "env--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "env--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "env--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "env--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "env--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "env--TET"?: ParamValueSerializedTypeMap["folder"];
  "env--TetScale"?: ParamValueSerializedTypeMap["float"];
  "env--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "env-circle1--radius"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--segments"?: ParamValueSerializedTypeMap["integer"];
  "env-circle1--open"?: ParamValueSerializedTypeMap["boolean"];
  "env-circle1--connectLastPoint"?: ParamValueSerializedTypeMap["boolean"];
  "env-circle1--arcAngle"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "env-circle1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--directionx"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--directiony"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--directionz"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--center"?: ParamValueSerializedTypeMap["vector3"];
  "env-circle1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--centerx"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--centery"?: ParamValueSerializedTypeMap["float"];
  "env-circle1--centerz"?: ParamValueSerializedTypeMap["float"];
  "env-jitter1--amount"?: ParamValueSerializedTypeMap["float"];
  "env-jitter1--mult"?: ParamValueSerializedTypeMap["vector3"];
  "env-jitter1--mult-multx"?: ParamValueSerializedTypeMap["float"];
  "env-jitter1--mult-multy"?: ParamValueSerializedTypeMap["float"];
  "env-jitter1--mult-multz"?: ParamValueSerializedTypeMap["float"];
  "env-jitter1--multx"?: ParamValueSerializedTypeMap["float"];
  "env-jitter1--multy"?: ParamValueSerializedTypeMap["float"];
  "env-jitter1--multz"?: ParamValueSerializedTypeMap["float"];
  "env-jitter1--seed"?: ParamValueSerializedTypeMap["integer"];
  "env-copy2--srcGroup"?: ParamValueSerializedTypeMap["string"];
  "env-copy2--templateGroup"?: ParamValueSerializedTypeMap["string"];
  "env-copy2--count"?: ParamValueSerializedTypeMap["integer"];
  "env-copy2--t"?: ParamValueSerializedTypeMap["vector3"];
  "env-copy2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--tx"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--ty"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--tz"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--r"?: ParamValueSerializedTypeMap["vector3"];
  "env-copy2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--rx"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--ry"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--rz"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--s"?: ParamValueSerializedTypeMap["vector3"];
  "env-copy2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--sx"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--sy"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--sz"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--scale"?: ParamValueSerializedTypeMap["float"];
  "env-copy2--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "env-copy2--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "env-copy2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "env-copy2--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "env-copy2--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "env-copy2--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "env-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "env-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "env-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "env-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "env-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "env-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "env-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "env-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "env-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "env-instance1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "env-instance1--applyMaterial"?: ParamValueSerializedTypeMap["boolean"];
  "env-instance1--material"?: ParamValueSerializedTypeMap["node_path"];
  "env-attribId1--class"?: ParamValueSerializedTypeMap["integer"];
  "env-attribId1--id"?: ParamValueSerializedTypeMap["boolean"];
  "env-attribId1--idName"?: ParamValueSerializedTypeMap["string"];
  "env-attribId1--idn"?: ParamValueSerializedTypeMap["boolean"];
  "env-attribId1--idnName"?: ParamValueSerializedTypeMap["string"];
  "env-MAT-meshLambertBuilder_INSTANCES--default"?: ParamValueSerializedTypeMap["folder"];
  "env-MAT-meshLambertBuilder_INSTANCES--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--opacity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--textures"?: ParamValueSerializedTypeMap["folder"];
  "env-MAT-meshLambertBuilder_INSTANCES--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--map"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshLambertBuilder_INSTANCES--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshLambertBuilder_INSTANCES--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshLambertBuilder_INSTANCES--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--emissive"?: ParamValueSerializedTypeMap["color"];
  "env-MAT-meshLambertBuilder_INSTANCES--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--emissiver"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshLambertBuilder_INSTANCES--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshLambertBuilder_INSTANCES--combine"?: ParamValueSerializedTypeMap["integer"];
  "env-MAT-meshLambertBuilder_INSTANCES--reflectivity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--refractionRatio"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshLambertBuilder_INSTANCES--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--advanced"?: ParamValueSerializedTypeMap["folder"];
  "env-MAT-meshLambertBuilder_INSTANCES--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshLambertBuilder_INSTANCES--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--front"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--blending"?: ParamValueSerializedTypeMap["integer"];
  "env-MAT-meshLambertBuilder_INSTANCES--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "env-MAT-meshLambertBuilder_INSTANCES--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "env-MAT-meshLambertBuilder_INSTANCES--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshLambertBuilder_INSTANCES--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshLambertBuilder_INSTANCES--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
}
